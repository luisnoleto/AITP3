@model AITP3.Models.Livro

@{
    ViewBag.Title = "Criar Livro";
}

<div class="container mt-5">
    <div class="card shadow-sm">
        <div class="card-header bg-primary text-black">
            <h2 class="mb-0">Adicionar Livro</h2>
        </div>
        <div class="card-body">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    <h4 class="text-muted mb-4">Preencha os dados do livro</h4>
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    @* Define uma classe com margem inferior para espaçamento *@
                    <div class="form-group row mb-3">
                        @Html.LabelFor(model => model.Titulo, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
                        <div class="col-sm-10">
                            @Html.EditorFor(model => model.Titulo, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Titulo, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row mb-3">
                        @Html.LabelFor(model => model.CategoriaId, "Categoria", htmlAttributes: new { @class = "col-sm-2 col-form-label" })
                        <div class="col-sm-10">
                            @Html.DropDownList("CategoriaId", null, "Selecione uma Categoria", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.CategoriaId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row mb-3">
                        @Html.LabelFor(model => model.Autor, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
                        <div class="col-sm-10">
                            @Html.EditorFor(model => model.Autor, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Autor, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row mb-3">
                        @Html.LabelFor(model => model.Editora, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
                        <div class="col-sm-10">
                            @Html.EditorFor(model => model.Editora, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Editora, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row mb-3">
                        @Html.LabelFor(model => model.ISBN, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
                        <div class="col-sm-10">
                            @Html.EditorFor(model => model.ISBN, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ISBN, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row mb-3">
                        @Html.LabelFor(model => model.AnoPublicacao, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
                        <div class="col-sm-10">
                            @Html.EditorFor(model => model.AnoPublicacao, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.AnoPublicacao, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row mb-4">
                        @Html.LabelFor(model => model.Valor, htmlAttributes: new { @class = "col-sm-2 col-form-label" })
                        <div class="col-sm-10">
                            @Html.EditorFor(model => model.Valor, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Valor, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        <div class="col-sm-10 offset-sm-2">
                            <input type="submit" value="Criar" class="btn btn-primary" />
                            @Html.ActionLink("Voltar à Lista", "Index", null, new { @class = "btn btn-secondary ml-2" })
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
